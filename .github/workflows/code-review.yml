name: Gemini AI Code Review

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main

permissions:
  contents: read
  pull-requests: write

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get PR Diff
        id: get_diff
        run: |
          set -eo pipefail
          BASE_SHA=${{ github.event.pull_request.base.sha }}
          HEAD_SHA=${{ github.event.pull_request.head.sha }}
          
          DIFF_CONTENT=$(git diff $BASE_SHA $HEAD_SHA)

          if [ -z "$DIFF_CONTENT" ]; then
            echo "diff_content=null" >> $GITHUB_OUTPUT
          else
            echo 'diff_content<<EOF' >> $GITHUB_OUTPUT
            echo "$DIFF_CONTENT" >> $GITHUB_OUTPUT
            echo 'EOF' >> $GITHUB_OUTPUT
          fi

      - name: Run AI Code Review Script
        id: gemini_review
        if: steps.get_diff.outputs.diff_content != 'null'
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          PR_DIFF: ${{ steps.get_diff.outputs.diff_content }}
        run: |
          set -eo pipefail
          pip install requests
          python .github/scripts/review.py

      - name: Post Review Comment to PR
        # é€™è£¡çš„æ‹¼å¯«å·²ä¿®æ­£
        if: steps.gemini_review.outputs.stdout != ''
        uses: actions/github-script@v7
        with:
          script: |
            const review_body = `### ðŸ¤– Gemini AI Code Review\n\n${{ steps.gemini_review.outputs.stdout }}`;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: review_body
            });